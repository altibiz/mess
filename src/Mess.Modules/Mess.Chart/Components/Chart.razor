@using OrchardCore.ContentManagement
@using Microsoft.Extensions.DependencyInjection
@using Mess.Chart.Abstractions.Descriptors
@using Mess.Chart.Abstractions.Services
@using Mess.Chart.Factories
@inherits ShapeComponentBase

@if (ChartDescriptor is TimeseriesChartDescriptor timeseriesChartDescriptor)
{
  var series = timeseriesChartDescriptor.Datasets
    .Select(dataset => new ChartSeries
    {
      Name = dataset.Label,
      Data = dataset.Datapoints.Select(datapoint => (double)datapoint.Y).ToArray()
    })
    .ToList();
  var xAxisLabels = timeseriesChartDescriptor.Datasets.FirstOrDefault()
    ?.Datapoints.Select(datapoint => datapoint.X.ToString())
    .ToArray() ?? Array.Empty<string>();

  <div>
    <MudChart
      ChartType="ChartType.Line"
      ChartSeries="@series"
      XAxisLabels="@xAxisLabels"
      Width="100%"
      Height="350px"/>
  </div>
}

@code {
  private ChartDescriptor? ChartDescriptor;

  protected override async Task OnInitializedAsync()
  {
    ContentItem contentItem = Model.ContentItem;
    var chartPart = contentItem.As<Abstractions.Models.ChartPart>();
    var chartFactory = ServiceProvider
      .GetServices<IChartFactory>()
      .FirstOrDefault(
        chartFactory =>
          chartFactory.ContentType == PreviewChartFactory.ChartContentType
      )!;
    ChartDescriptor = await chartFactory.CreateChartAsync(
      new ContentItem(),
      contentItem
    )!;
  }
}
