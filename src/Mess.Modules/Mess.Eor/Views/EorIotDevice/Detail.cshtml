@inject IAuthorizationService _authorizationService
@using Mess.Cms.Extensions.Microsoft
@using Mess.Eor.Extensions
@using Mess.Eor.Localization.Abstractions
@using Microsoft.AspNetCore.Authorization
@using Mess.Eor.Abstractions.Timeseries
@model EorIotDeviceDetailViewModel
@inject IEorLocalizer L

@{
  var statusId = "status";
  var communicationFaultId = "communication-fault";
  var processFaultId = "process-fault";
  var processFaultsId = "process-faults";
  var controlStatusId = "control-status";
  var modeLabelId = "mode-label";
  var modeInputId = "mode-input";
  var doorStateId = "door-state";
  var mainCircuitBreakerStateId = "main-circuit-breaker-state";
  var powerRelayId = "power-relay";
  var voltageId = "voltage";
  var currentId = "current";
  var temperatureId = "temperature";
  var chartCanvasId = "chart";
  var chartErrorId = "chart-error";
}

@* @if (Model.EorSummary.Status? is not null) *@
@if (true)
{
  var status =
    Model.EorSummary.Status?.ProcessFault == 0
      ? (Class: "status-ok", Text: "OK")
      : Model.EorSummary.Status?.ProcessFault == 999
        ? (Class: "status-warning", Text: "OFF")
        : (Class: "status-error", Text: "ERROR");
  <section>
    <h3 class="section-header">
      Status
      <span id="@statusId" class="status @status.Class">@L[status.Text]</span>
    </h3>
    <div class="section-content">
      <div class="property-table">
        <div class="property">
          <strong>@L["Communication fault"]</strong>
          <span id="@communicationFaultId">
            @Model.EorSummary.Status?.CommunicationFault
          </span>
          <div class="property-metadata">
            <ul class="property-metadata-list">
              <li>
                <strong>0(0)</strong>
                <span>@L["No error occurred"]</span>
              </li>
              <li>
                <strong>803A(32826)</strong>
                <span>@L["Web Control DB does not exist on the CPU"]</span>
              </li>
              <li>
                <strong>8081(32897)</strong>
                <span
                >
                  @L["Incorrect version or incorrect format of the Web"]
                  @L["Control DB"]
                </span
                >
              </li>
              <li>
                <strong>8082(32898)</strong>
                <span
                >
                  @L["Incorrect version or incorrect format of the Web"]
                  @L["Control DB Web server is not enabled"]
                </span
                >
              </li>
              <li>
                <strong>80C1(32898)</strong>
                <span
                >
                  @L["There are no resources to initialize the web"]
                  @L["application (two or four web applications may be running)"]
                </span
                >
              </li>
              <li>
                <strong>00XY</strong>
                <span>
                  <p>
                    @L["X- error during initialization of the Web Control DB"]
                  </p>
                  <p>@L["Y- Number of the pending request</p>"]
                </span>
              </li>
            </ul>
          </div>
        </div>
        <div class="property">
          <strong>@L["Process fault"]</strong>
          <span id="@processFaultId">
            @Model.EorSummary.Status?.ProcessFault
          </span>
          <div class="property-metadata">
            <ul
              class="property-metadata-list property-metadata-list-small">
              <li>
                <strong>0</strong><span>@L["No error occurred"]</span>
              </li>
              <li>
                <strong>1</strong><span>@L["p. reley d.n. turn on"]</span>
              </li>
              <li>
                <strong>2</strong><span>@L["p. reley d.n. turn off"]</span>
              </li>
              <li>
                <strong>3</strong>
                <span>@L["output voltage out of range"]</span>
              </li>
              <li>
                <strong>4</strong><span>@L["output current fault"]</span>
              </li>
              <li>
                <strong>5</strong><span>@L["communication fault"]</span>
              </li>
              <li>
                <strong>6</strong><span>@L["reset needed"]</span>
              </li>
              <li>
                <strong>7</strong><span>@L["door was open"]</span>
              </li>
              <li>
                <strong>8</strong><span>@L["current too high"]</span>
              </li>
              <li>
                <strong>91</strong><span>@L["partial power loss"]</span>
              </li>
              <li>
                <strong>92</strong><span>@L["complete power loss"]</span>
              </li>
              <li>
                <strong>10</strong><span>@L["heatsink 1 failure"]</span>
              </li>
              <li>
                <strong>11</strong><span>@L["heatsink 2 failure"]</span>
              </li>
              <li>
                <strong>12</strong><span>@L["temperature out of range"]</span>
              </li>
            </ul>
          </div>
        </div>
        <div class="message">
          <strong>@L["Process fault messages"]</strong>
          <div id="@processFaultsId" class="message-list">
            @if(Model.EorSummary.Status?.ProcessFaults is not null){
              @foreach (var processFault in Model.EorSummary.Status.ProcessFaults)
              {
                <p>
                  @L[@processFault]
                </p>
              }
            }
          </div>
        </div>
      </div>
    </div>
  </section>
}

@* @if (Model.EorSummary.Status? is not null &&
     await _authorizationService.AuthorizeControlAsync(
       User,
       await this.GetAuthenticatedOrchardCoreUserAsync(),
       Model.EorIotDeviceItem
     )) *@
@if (true)
{
  var deviceStatus =
    Model.EorSummary.Status?.ResetState ==
    EorResetState.ShouldReset
      ? (Class: "status-warning", Text: "Reset")
      : Model.EorSummary.Status?.RunState ==
        EorRunState.Started
        ? (Class: "status-ok", Text: "Started")
        : Model.EorSummary.Status?.RunState ==
          EorRunState.Stopped
          ? (Class: "status-error", Text: "Stopped")
          : (Class: "status-warning", Text: "Unknown");
  var serverStatus =
    Model.EorIotDeviceItem.EorIotDevicePart.Value.Controls.ResetState ==
    EorResetState.ShouldReset
      ? (Class: "status-warning", Text: "Reset")
      : Model.EorIotDeviceItem.EorIotDevicePart.Value.Controls.RunState ==
        EorRunState.Started
        ? (Class: "status-ok", Text: "Started")
        : Model.EorIotDeviceItem.EorIotDevicePart.Value.Controls.RunState ==
          EorRunState.Stopped
          ? (Class: "status-error", Text: "Stopped")
          : (Class: "status-warning", Text: "Unknown");
  <section>
    <h3 class="section-header">
      @L["Controls"]
      <span id="@controlStatusId" class="status @serverStatus.Class">
        @L[serverStatus.Text]
        @if (deviceStatus.Text != serverStatus.Text)
        {
          <span>(@L[deviceStatus.Text])</span>
        }
      </span>
    </h3>
    <div class="section-content">
    <div class="property-table">
      <div class="message">
        <strong>@L["Synchronization"]</strong>
        <div
          class="message-list"
          style="min-height: 10rem">
          <p>@L["All values except those in parentheses are saved on the server."]</p>
          <p>@L["The values in parentheses are saved on the device."]</p>
          <p>@L["The values saved on the device will be the same as the ones on the server when the device polls the server."]</p>
        </div>
      </div>
      <div class="control-table">
        <div class="start-stop-reset-controls">
          <form
            asp-route-area="Mess.Eor"
            asp-controller="EorIotDeviceControls"
            asp-action="Start"
            asp-route-contentItemId="@Model.EorIotDeviceItem.ContentItemId"
            asp-route-returnUrl="@FullRequestPath">
            <button class="button-success" type="submit">
              @L["START"]
            </button>
          </form>
          <form
            asp-route-area="Mess.Eor"
            asp-controller="EorIotDeviceControls"
            asp-action="Stop"
            asp-route-contentItemId="@Model.EorIotDeviceItem.ContentItemId"
            asp-route-returnUrl="@FullRequestPath">
            <button class="button-danger" type="submit">
              @L["STOP"]
            </button>
          </form>
          <form
            asp-route-area="Mess.Eor"
            asp-controller="EorIotDeviceControls"
            asp-action="Reset"
            asp-route-contentItemId="@Model.EorIotDeviceItem.ContentItemId"
            asp-route-returnUrl="@FullRequestPath">
            <button class="button-warning" type="submit">
              @L["RESET"]
            </button>
          </form>
        </div>
        <div class="input-controls">
          <form
            asp-route-area="Mess.Eor"
            asp-controller="EorIotDeviceControls"
            asp-action="SetMode"
            asp-route-contentItemId="@Model.EorIotDeviceItem.ContentItemId"
            asp-route-returnUrl="@FullRequestPath">
            <label id="@modeLabelId" for="Mode">
              @L["Position"]
              @if (Model.EorIotDeviceItem.EorIotDevicePart.Value.Controls.Mode !=
                   Model.EorSummary.Status?.Mode)
              {
                <span>(@Model.EorSummary.Status?.Mode)</span>
              }
            </label>
            <input
              id="@modeInputId"
              type="number"
              min="0"
              max="63"
              name="Mode"
              value="@Model.EorIotDeviceItem.EorIotDevicePart.Value.Controls.Mode"/>
            <button class="button-primary" type="submit">
              @L["SET"]
            </button>
          </form>
        </div>
      </div>
    </div>
  </section>
}

@* @if (Model.EorSummary.Status? is not null &&
     Model.EorSummary.LastMeasurement? is not null) *@
@if (true)
{
  var powerRelayText =
    Model.EorSummary.Status?.ProcessFault == 0
      ? "On"
      : Model.EorSummary.Status?.ProcessFault == 999
        ? "Off"
        : "Error";
  <section>
    <h3 class="section-header">@L["State"]</h3>
    <div class="section-content">
      <div class="property-table">
        <div class="property">
          <strong>@L["Door state"]</strong>
          <span id="@doorStateId">
            @Model.EorSummary.Status?.DoorState
          </span>
        </div>
        <div class="property">
          <strong>@L["Main circuit braker"]</strong>
          <span id="@mainCircuitBreakerStateId">
            @Model.EorSummary.Status?.MainCircuitBreakerState
          </span>
        </div>
        <div class="property">
          <strong>@L["Power relay"]</strong>
          <span id="@powerRelayId">
            @L[powerRelayText]
          </span>
        </div>
        <div class="property">
          <strong>@L["Voltage"] [V<sub>DC</sub>]</strong>
          <span id="@voltageId">
            @Model.EorSummary.LastMeasurement?.Voltage
          </span>
        </div>
        <div class="property">
          <strong>@L["Current"] [A<sub>DC</sub>]</strong>
          <span id="@currentId">
            @Model.EorSummary.LastMeasurement?.Current
          </span>
        </div>
        <div class="property">
          <strong>@L["Temperature"] [<sup>o</sup>C]</strong>
          <span id="@temperatureId">
            @Model.EorSummary.LastMeasurement?.Temperature
          </span>
        </div>
      </div>
      <div class="chart-container">
        <canvas id="@chartCanvasId" class="chart"/>
        <script asp-name="mess-chart"></script>
        <script>
          window.mess.chart.useChart({
            requestUrlPrefix: "@(this.GetRequestUrlPrefix())",
            contentItemId: "@Model.EorIotDeviceItem.ContentItemId",
            isPreview: false,
            canvasId: "@chartCanvasId",
            errorId: "@chartErrorId",
            culture: "@Orchard.CultureName()",
            font: {
              family: "Roboto",
              style: "normal",
              weight: "300",
              color: "#000",
              size: 14
            }
          });
        </script>
      </div>
    </div>
  </section>
}

<script asp-name="mess-eor"></script>
<script>
  window.mess.eor.useRefresh({
    requestUrlPrefix: "@(this.GetRequestUrlPrefix())",
    contentItemId: "@Model.EorIotDeviceItem.ContentItemId",
    id: {
      status: "@statusId",
      communicationFault: "@communicationFaultId",
      processFault: "@processFaultId",
      processFaults: "@processFaultsId",
      controlStatus: "@controlStatusId",
      modeLabel: "@modeLabelId",
      modeInput: "@modeInputId",
      doorState: "@doorStateId",
      mainCircuitBreakerState: "@mainCircuitBreakerStateId",
      powerRelay: "@powerRelayId",
      voltage: "@voltageId",
      current: "@currentId",
      temperature: "@temperatureId"
    }
  });
</script>
