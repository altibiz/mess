@using Mess.Ozds.Abstractions.Indexes
@using Mess.Iot.Abstractions.Models
@using Mess.Ozds.Abstractions.Models
@using OrchardCore.Users.Models
@using OrchardCore.ContentFields.Indexing.SQL
@using System.Linq.Expressions
@using Mess.Ozds.Abstractions.Timeseries
@using Mess.Billing.Abstractions.Models
@using OrchardCore.ContentManagement.Records
@using OrchardCore.Users.Indexes
@using Mess.Billing.Abstractions.Indexes

@inject NavigationManager NavigationManager

  <MudDataGrid
  T="ContentItem"
  MultiSelection="true"
  Items="@_invoices"
  SortMode="SortMode.Multiple"
  Filterable="true"
  QuickFilter="@_quickFilter"
  RowClick="@RowClicked">
  <ToolBarContent>
    <MudText Typo="Typo.h6">@T["Raƒçuni"]</MudText>
    <MudSpacer />
    <MudTextField
      @bind-Value="_searchString"
      Placeholder="Search"
      Adornment="Adornment.Start"
      Immediate="true"
      AdornmentIcon="@Icons.Material.Filled.Search"
      IconSize="MudBlazor.Size.Medium"
      Class="mt-0">
    </MudTextField>
  </ToolBarContent>
  <Columns >
    <PropertyColumn
      Property="x => x.ContentItemId"
      Title='@T["Id"].Value'
      Sortable="false"
      Filterable="false" />
    <PropertyColumn
      Property="x => x.As<OzdsInvoicePart>().Data.DistributionSystemOperator.DisplayText"
      Title='@T["Izdavatelj"].Value'
      Sortable="false"
      Filterable="false" />
    <PropertyColumn
      Property="x => x.As<OzdsInvoicePart>().Data.DistributionSystemUnit.DisplayText"
      Title='@T["Primatelj"].Value' />
    <PropertyColumn
      Property="x => x.As<OzdsInvoicePart>().Data.From.Date.ToShortDateString()"
      Title='@T["Od"].Value' />
    <PropertyColumn
      Property="x => x.As<OzdsInvoicePart>().Data.To.Date.ToShortDateString()"
      Title='@T["Do"].Value' />
    <PropertyColumn
      Property="x => x.As<OzdsInvoicePart>().Data.TotalWithTax"
      Title='@T["Ukupno"].Value' />
  </Columns>
  <PagerContent>
    <MudDataGridPager T="ContentItem" />
  </PagerContent>
</MudDataGrid>

@code {
    [Parameter]
    public ContentItem LegalEntity { get; set; } = default!;
    private string? _searchString;
    private IEnumerable<ContentItem>? _invoices;
    protected override async Task OnInitializedAsync()
    {
        await WithTransientSessionAsync(async session => {
            _invoices = await session
              .Query<ContentItem, PaymentIndex>()
              .Where(index => index.IssuerContentItemId == LegalEntity.ContentItemId || index.RecipientContentItemId == LegalEntity.ContentItemId)
          .ListAsync();
      });
  }

  private Func<ContentItem, bool> _quickFilter => x =>
  {
    if (string.IsNullOrWhiteSpace(_searchString))
      return true;

    if (x.As<OzdsInvoicePart>().Data.DistributionSystemUnit.DisplayText.Contains(_searchString, StringComparison.OrdinalIgnoreCase))
      return true;

    return false;
  };

  private void RowClicked(DataGridRowClickEventArgs<ContentItem> args) {
      NavigationManager.NavigateTo($"app/invoice/{args.Item.ContentItemId}");
     }
}
