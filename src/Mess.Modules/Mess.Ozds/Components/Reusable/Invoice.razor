@using Mess.Ozds.Abstractions.Models

<MudText Typo="Typo.h5">
  RAČUN ZA @(data?.From.Month). MJESEC
</MudText>

<MudPaper class="mt-4 px-4 py-2">
  <MudGrid Spacing="2">
    <MudItem xs="12" sm="6">
      <MudText Type="Typo.body2">
        <strong>ZDS:</strong>
      </MudText>
    </MudItem>
    <MudItem xs="12" sm="6">
      <MudHidden Breakpoint="Breakpoint.Xs">
        <MudText Type="Typo.body2" Align="MudAlign.Right">
          @(data?.ClosedDistributionSystem.Content.TitlePart.Title)
        </MudText>
      </MudHidden>
      <MudHidden Breakpoint="Breakpoint.SmAndUp">
        <MudText Type="Typo.body2" Align="MudAlign.Left">
          @(data?.ClosedDistributionSystem.Content.TitlePart.Title)
        </MudText>
      </MudHidden>
    </MudItem>
    <MudItem xs="12" sm="6">
      <MudText Type="Typo.body2">
        <strong>Korisnik:</strong>
      </MudText>
    </MudItem>
    <MudItem xs="12" sm="6">
      <MudHidden Breakpoint="Breakpoint.Xs">
        <MudText Type="Typo.body2" Align="MudAlign.Right">
          @(data?.DistributionSystemUnit.Content.TitlePart.Title)
        </MudText>
      </MudHidden>
      <MudHidden Breakpoint="Breakpoint.SmAndUp">
        <MudText Type="Typo.body2" Align="MudAlign.Left">
          @(data?.DistributionSystemUnit.Content.TitlePart.Title)
        </MudText>
      </MudHidden>
    </MudItem>
  </MudGrid>
</MudPaper>

<MudText Typo="Typo.h5" class="mt-8">
  Mrežarina
</MudText>
@foreach (var row in usageRows) {
  <MudPaper class="mt-2 px-4 py-2">
    <MudGrid Spacing="1">
      <MudItem xs="12" sm="6">
        <MudText Typo="Typo.body2">
          @(row.Name)
        </MudText>
      </MudItem>
      <MudItem xs="12" sm="6">
        <MudHidden Breakpoint="Breakpoint.Xs">
          <MudText Type="Typo.body2" Align="MudAlign.Right">
            @(row.Total.ToString("F2"))
          </MudText>
        </MudHidden>
        <MudHidden Breakpoint="Breakpoint.SmAndUp">
          <MudText Type="Typo.body2" Align="MudAlign.Left">
            @(row.Total.ToString("F2"))
          </MudText>
        </MudHidden>
      </MudItem>
    </MudGrid>
  </MudPaper>
}
<MudText Typo="Typo.subtitle1" class="mt-2" Align="MudAlign.Right">
  UKUPNO @(data?.UsageExpenditure.Total)
</MudText>

<MudText Typo="Typo.h5" class="mt-8">
  Opskrba
</MudText>
@foreach (var row in supplyRows) {
  <MudPaper class="mt-2 px-4 py-2">
    <MudGrid Spacing="1">
      <MudItem xs="12" sm="6">
        <MudText Typo="Typo.body2">
          @(row.Name)
        </MudText>
      </MudItem>
      <MudItem xs="12" sm="6">
        <MudHidden Breakpoint="Breakpoint.Xs">
          <MudText Type="Typo.body2" Align="MudAlign.Right">
            @(row.Total.ToString("F2"))
          </MudText>
        </MudHidden>
        <MudHidden Breakpoint="Breakpoint.SmAndUp">
          <MudText Type="Typo.body2" Align="MudAlign.Left">
            @(row.Total.ToString("F2"))
          </MudText>
        </MudHidden>
      </MudItem>
    </MudGrid>
  </MudPaper>
}
<MudText Typo="Typo.subtitle1" class="mt-2" Align="MudAlign.Right">
  UKUPNO @(data?.SupplyExpenditure.Total)
</MudText>

<MudPaper class="mt-8 px-4 py-2">
  <MudGrid Spacing="1">
    <MudItem xs="12" sm="9">
      <MudText Typo="Typo.body1">
        <strong>Ukupno</strong>
      </MudText>
    </MudItem>
    <MudItem xs="12" sm="3">
      <MudHidden Breakpoint="Breakpoint.Xs">
        <MudText Type="Typo.body2" Align="MudAlign.Right">
          @(data?.Total.ToString("F2"))
        </MudText>
      </MudHidden>
      <MudHidden Breakpoint="Breakpoint.SmAndUp">
        <MudText Type="Typo.body2" Align="MudAlign.Left">
          @(data?.Total.ToString("F2"))
        </MudText>
      </MudHidden>
    </MudItem>
    <MudItem xs="12" sm="9">
      <MudText Typo="Typo.body1">
        <strong>PDV (@((data?.TaxRate * 100M)?.ToString("F2"))%)</strong>
      </MudText>
    </MudItem>
    <MudItem xs="12" sm="3">
      <MudHidden Breakpoint="Breakpoint.Xs">
        <MudText Type="Typo.body2" Align="MudAlign.Right">
          @(data?.Tax.ToString("F2"))
        </MudText>
      </MudHidden>
      <MudHidden Breakpoint="Breakpoint.SmAndUp">
        <MudText Type="Typo.body2" Align="MudAlign.Left">
          @(data?.Tax.ToString("F2"))
        </MudText>
      </MudHidden>
    </MudItem>
    <MudItem xs="12" sm="9">
      <MudText Typo="Typo.body1">
        <strong>Sveukupno</strong>
      </MudText>
    </MudItem>
    <MudItem xs="12" sm="3">
      <MudHidden Breakpoint="Breakpoint.Xs">
        <MudText Type="Typo.body2" Align="MudAlign.Right">
          @(data?.TotalWithTax.ToString("F2"))
        </MudText>
      </MudHidden>
      <MudHidden Breakpoint="Breakpoint.SmAndUp">
        <MudText Type="Typo.body2" Align="MudAlign.Left">
          @(data?.TotalWithTax.ToString("F2"))
        </MudText>
      </MudHidden>
    </MudItem>
  </MudGrid>
</MudPaper>

<MudHidden Breakpoint="Breakpoint.LgAndDown">
  <MudText class="mt-8" Align="MudAlign.Right">
    <MudLink class="ml-auto" Href="@printHref">
      <MudButton Variant="Variant.Filled">
        PRINT
      </MudButton>
    </MudLink>
  </MudText>
</MudHidden>

<div class="mb-16" />

@code {
  [Parameter]
  public OzdsInvoiceItem Item { get; set; } = default!;

  private OzdsInvoiceItem _invoiceItem => Item;

  OzdsInvoiceData? data;

  string printHref => $"app/invoice-print/{Item.ContentItemId}";

  protected override async Task OnInitializedAsync()
  {
    data  = _invoiceItem.OzdsInvoicePart.Value.Data;
  }

  private record Row(string Name, decimal Total);

  private Row[] usageRows => data is null
    ? new Row[] { }
    : new[]
      {
        new Row(
          "Korištenje mreže u doba više dnevne tarife",
          data.UsageExpenditure.HighEnergyFee
        ),
        new Row(
          "Korištenje mreže u doba niže dnevne tarife",
          data.UsageExpenditure.LowEnergyFee
        ),
        new Row(
          "Angažirana snaga u doba više tarife",
          data.UsageExpenditure.MaxPowerFee
        ),
        new Row(
          "Prekomjerno preuzeta jalova energija",
          data.UsageExpenditure.ReactiveEnergyFee
        ),
        new Row(
          "Naknada za mjernu uslugu",
          data.UsageExpenditure.IotDeviceFee
        ),
      };

  private Row[] supplyRows => data is null
    ? new Row[] { }
    : new[]
      {
        new Row(
          "Opskrba električnom energijom u doba više dnevne tarife",
          data.SupplyExpenditure.HighEnergyFee
        ),
        new Row(
          "Opskrba električnom energijom u doba niže dnevne tarife",
          data.SupplyExpenditure.LowEnergyFee
        ),
        new Row(
          "Naknada za poticanje proizvodnje iz obnovljivih izvora energije i kogeneracije",
          data.SupplyExpenditure.RenewableEnergyFee
        ),
        new Row(
          "Trošarina za poslovnu/neposlovnu upotrebu",
          data.SupplyExpenditure.BusinessUsageFee
        )
      };
}
