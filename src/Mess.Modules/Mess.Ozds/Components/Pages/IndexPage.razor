@page "/app"

@using Mess.Ozds.Abstractions.Indexes
@using Mess.Iot.Abstractions.Models
@using Mess.Ozds.Abstractions.Models
@using OrchardCore.Users.Models
@using OrchardCore.ContentFields.Indexing.SQL

@inject ISession _session
@inject NavigationManager _navigationManager

@if (_user is null) {
  return;
}

@if (_user.RoleNames.Contains("Administrator")) {
  return;
}

@if (_legalEntity is null) {
  return;
}

@if (_user.RoleNames.Contains("Distribution System Unit Representative")) {
  <DashboardGraphs LegalEntity="@_legalEntity" />
  <OMMsMobileNew LegalEntity="@_legalEntity" />
}
@if (_user.RoleNames.Contains("Closed Distribution System Representative")) {
  <DashboardGraphs LegalEntity="@_legalEntity" />
  <OwnedSubnets LegalEntity="@_legalEntity" />
}
@if (_user.RoleNames.Contains("Distribution System Operator Representative")) {
  <OperatorDashboard LegalEntity="@_legalEntity" />
  <SubgridConsumption LegalEntity="@_legalEntity" />
  <InvoicesMobileNew LegalEntity="@_legalEntity" />
}

@code {
  private User? _user;

  private ContentItem? _legalEntity;

  protected override async Task OnInitializedAsync()
  {
    _user = await this.GetAuthenticatedOrchardCoreUserAsync();

    _legalEntity = await _session
      .Query<ContentItem, UserPickerFieldIndex>()
      .Where(index => index.ContentPart == "LegalEntityPart")
      .Where(index => index.SelectedUserId == _user.UserId)
      .FirstOrDefaultAsync();
  }

}
